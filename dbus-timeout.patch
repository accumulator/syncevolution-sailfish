diff -c dbus-0.61/dbus.orig/dbus-connection.c dbus-0.61/dbus/dbus-connection.c
*** dbus-0.61/dbus.orig/dbus-connection.c	2007-03-03 16:13:20.000000000 +0100
--- dbus-0.61/dbus/dbus-connection.c	2007-03-03 16:14:11.000000000 +0100
***************
*** 4758,4761 ****
--- 4758,4784 ----
    return res;
  }
  
+ 
+ /**
+  * There are valid use cases where the (previously hard-coded) default
+  * timeout was too short. This function replaces _DBUS_DEFAULT_TIMEOUT_VALUE
+  * and - if set - interprets the content of DBUS_DEFAULT_TIMEOUT as
+  * number of milliseconds.
+  */
+ int _dbus_connection_default_timeout(void)
+ {
+   const char *def = getenv("DBUS_DEFAULT_TIMEOUT");
+   int timeout = 0;
+ 
+   if (def) {
+     timeout = atoi(def);
+   }
+   if (timeout <= 0) {
+     /* the traditional _DBUS_DEFAULT_TIMEOUT_VALUE */
+     timeout = 25 * 1000;
+   }
+ 
+   return timeout;
+ }
+ 
  /** @} */
diff -c dbus-0.61/dbus.orig/dbus-connection-internal.h dbus-0.61/dbus/dbus-connection-internal.h
*** dbus-0.61/dbus.orig/dbus-connection-internal.h	2007-03-03 16:13:20.000000000 +0100
--- dbus-0.61/dbus/dbus-connection-internal.h	2007-03-03 16:14:11.000000000 +0100
***************
*** 44,51 ****
  } DBusIterationFlags;
  
  /** default timeout value when waiting for a message reply, 25 seconds */
! #define _DBUS_DEFAULT_TIMEOUT_VALUE (25 * 1000)
  
  void              _dbus_connection_lock                        (DBusConnection     *connection);
  void              _dbus_connection_unlock                      (DBusConnection     *connection);
  DBusConnection *  _dbus_connection_ref_unlocked                (DBusConnection     *connection);
--- 44,52 ----
  } DBusIterationFlags;
  
  /** default timeout value when waiting for a message reply, 25 seconds */
! #define _DBUS_DEFAULT_TIMEOUT_VALUE _dbus_connection_default_timeout()
  
+ int               _dbus_connection_default_timeout             (void);
  void              _dbus_connection_lock                        (DBusConnection     *connection);
  void              _dbus_connection_unlock                      (DBusConnection     *connection);
  DBusConnection *  _dbus_connection_ref_unlocked                (DBusConnection     *connection);
Common subdirectories: dbus-0.61/dbus.orig/.deps and dbus-0.61/dbus/.deps
Common subdirectories: dbus-0.61/dbus.orig/.libs and dbus-0.61/dbus/.libs
