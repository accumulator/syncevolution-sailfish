<?xml version="1.0"?>
<!-- SYNTHESIS SYNC CLIENT Version 3.1 Configuration file -->
<!-- (works for V3.1.1.0 and later) -->

<sysync_config version="1.0">

  <configvar name="logpath" value="$(defout_path)"/>

  <!-- this string is output to every session debug logfile to identify the config in use -->
  <configidstring>SyncEvolution client config</configidstring>

  <debug>
    <!-- path where logfiles are stored -->
    <logpath>$(logpath)</logpath>
    <logflushmode>flush</logflushmode> <!-- buffered is fastest mode, but may loose data on process abort. Other options: "flush" (after every line) or "openclose" (safest, slowest, like in 2.x server) -->
    <!-- per session log -->
    <sessionlogs>yes</sessionlogs> <!-- by default, create a session log file for every sync session (might be disabled for special users/devices in scripts) -->
    <!-- debug format options -->
    <logformat>html</logformat> <!-- html is nicely colored and easily viewable with a web browser. Other options: "xml", "text" -->
    <timestamp>yes</timestamp> <!-- show timestamps for structure elements in log -->
    <timestampall>no</timestampall> <!-- don't show timestamp for every log line -->
    <timedsessionlognames>yes</timedsessionlognames> <!-- session logs also have the session start timestamp in the filename - makes them more easily sortable -->
    <!-- thread logging mode -->
    <subthreadmode>separate</subthreadmode> <!-- write log info from subthreads into separate log files. Other options: "suppress" -->
    <!-- basic debug level selection -->
    <!-- enable option="extended"/ --> <!-- "extended" is a good choice for start testing. For production, use "normal" or "minimal" -->
    <!-- <enable option="normal"/> --> <!-- "normal" provides rich debug info, but still in reasonable size  -->
    <!-- <enable option="minimal"/> --> <!-- "minimal" just shows basic flow and error. Not suitable for debugging -->
    <!-- <enable option="maximal"/> --> <!-- "maximal" can create VERY LARGE logs and cause HEAVY SLOWDOWN. Only for detail debugging  -->
    <enable option="all"/> <!-- "all" shows EVERYTHING possible, and way too much for any normal situation. For hardcore debugging ONLY! -->
    <!-- additional debug info switches -->
    <enable option="userdata"/> <!-- Make this <disable ...> if you don't want user data in the logs -->
    <enable option="scripts"/> <!-- Make this <enable ...> to show script execution in logs  -->
    <enable option="exotic"/> <!-- Make this <enable ...> to include very in-detail info. CAN PRODUCE ENORMOUS LOGS and HEAVILY IMPACT PERFORMANCE for large slow syncs - use with care!  -->
    <!-- see manual for more debug info switches -->
    <!-- global log options -->
    <globallogs>yes</globallogs> <!-- by default, do not log global session dispatching, creation etc. (not useful in multi-user operation) -->
    <singlegloballog>no</singlegloballog> <!-- a new global log will be started for every start of the server/application -->
    <!-- SyncML message dumping options -->
    <msgdump>yes</msgdump> <!-- do not dump syncml traffic 1:1 to files -->
    <xmltranslate>yes</xmltranslate> <!-- do not try to translate syncml traffic into XML (DO NOT SET THIS OPTION IN PRODUCTIVE SERVERS!) -->
  </debug>

  <!-- Note: since 2.1.1.5, clients have a <transport> section to specify <keepconnection> behaviour -->
  <transport type="xpt">
    <!-- allow HTTP 1.1 kepp-alive (multiple request-answer-exchanges in single TCP connection) -->
    <keepconnection>true</keepconnection>
  </transport>

  <scripting>
    <looptimeout>5</looptimeout>
  </scripting>


  <datatypes>



    <!-- list of internal fields representing vCard data -->
    <fieldlist name="contacts">
      <field name="REV" type="timestamp" compare="never" age="yes"/>
      <field name="SYNCLVL" type="integer" compare="never"/>
      <!-- Name elements -->
      <field name="N_LAST" type="string" compare="always"/>
      <field name="N_FIRST" type="string" compare="always"/>
      <field name="N_PREFIX" type="string" compare="conflict"/>
      <field name="TITLE" type="string" compare="conflict" merge="fillempty"/>

      <!-- categories and classification -->
      <field name="CATEGORIES" type="string" compare="conflict" merge="fillempty"/>
      <field name="CLASS" type="string" compare="conflict" merge="fillempty"/>

      <!-- organisation -->
      <field name="ORG_NAME" type="string" compare="slowsync" merge="fillempty"/>
      <field name="ORG_DIVISION" type="string" compare="conflict" merge="fillempty"/>

      <!-- birthday -->
      <field name="BDAY" type="date" compare="conflict" merge="fillempty"/>

      <!-- telephone numbers -->
      <field name="TEL_HOME" type="telephone" compare="conflict"/>
      <field name="TEL_WORK" type="telephone" compare="conflict"/>
      <field name="TEL_MOBILE" type="telephone" compare="conflict"/>
      <field name="TEL_FAX" type="telephone" compare="conflict"/>
      <field name="TEL_OTHER_1" type="telephone" compare="conflict"/>
      <field name="TEL_OTHER_2" type="telephone" compare="conflict"/>
      <field name="TEL_OTHER_3" type="telephone" compare="conflict"/>
      <field name="TEL_OTHER_4" type="telephone" compare="conflict"/>

      <!-- home address -->
      <field name="ADR_H_POBOX" type="multiline" compare="conflict"/>
      <field name="ADR_H_ADDTL" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_H_STREET" type="multiline" compare="conflict"/>
      <field name="ADR_H_CITY" type="multiline" compare="conflict"/>
      <field name="ADR_H_REG" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_H_ZIP" type="multiline" compare="conflict"/>
      <field name="ADR_H_COUNTRY" type="multiline" compare="conflict"/>

      <!-- work address -->
      <field name="ADR_W_POBOX" type="multiline" compare="conflict"/>
      <field name="ADR_W_ADDTL" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_W_STREET" type="multiline" compare="conflict"/>
      <field name="ADR_W_CITY" type="multiline" compare="conflict"/>
      <field name="ADR_W_REG" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_W_ZIP" type="multiline" compare="conflict"/>
      <field name="ADR_W_COUNTRY" type="multiline" compare="conflict"/>

      <!-- other address -->
      <field name="ADR_O_POBOX" type="multiline" compare="conflict"/>
      <field name="ADR_O_ADDTL" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_O_STREET" type="multiline" compare="conflict"/>
      <field name="ADR_O_CITY" type="multiline" compare="conflict"/>
      <field name="ADR_O_REG" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ADR_O_ZIP" type="multiline" compare="conflict"/>
      <field name="ADR_O_COUNTRY" type="multiline" compare="conflict"/>

      <!-- emails -->
      <field name="EMAIL_1" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="EMAIL_2" type="multiline" compare="conflict" merge="fillempty"/>

      <!-- web addresses -->
      <field name="WEB_1" type="url" compare="conflict" merge="fillempty"/>
      <field name="WEB_2" type="url" compare="conflict" merge="fillempty"/>

      <!-- Note -->
      <field name="NOTE" type="multiline" compare="conflict" merge="lines"/>

      <!-- Photo -->
      <field name="PHOTO" type="blob" compare="never" merge="fillempty"/>
      <field name="PHOTO_TYPE" type="string" compare="never" merge="fillempty"/>

    </fieldlist>

    <!-- vCard profile -->
    <mimeprofile name="vcard" fieldlist="contacts">

      <profile name="VCARD" nummandatory="0"> <!-- we relax vCard here and allow vCards w/o name, like from K750i. Strict handling would be nummandatory="1" -->
        <property name="VERSION">
          <value conversion="version"/>
        </property>

        <property name="REV">
          <value field="REV"/>
        </property>

        <property name="N" values="5" mandatory="no"> <!-- we relax vCard here and allow vCards w/o name, like from K750i. Strict handling would be mandatory="yes" -->
          <value index="0" field="N_LAST"/>
          <value index="1" field="N_FIRST"/>
          <value index="3" field="N_PREFIX"/>
        </property>

        <property name="TITLE">
          <value field="TITLE"/>
        </property>

        <!-- vCard 2.1 does not really have a CATEGORIES property, but we let it inherit that of vCard 3.0 (NOT that of vCalendar 1.0 with ; separators!!) -->
        <property name="CATEGORIES" values="list" valueseparator="," altvalueseparator=";">
          <value field="CATEGORIES" combine=","/>
        </property>

        <property name="CLASS" suppressempty="yes">
          <value field="CLASS"/>
        </property>

        <property name="ORG" values="2">
          <value index="0" field="ORG_NAME"/>
          <value index="1" field="ORG_DIVISION"/>
        </property>

        <property name="EMAIL">
          <value field="EMAIL_1"/>
          <position field="EMAIL_1" repeat="2" increment="1" minshow="1"/>
        </property>

        <property name="URL">
          <value field="WEB_1"/>
          <position field="WEB_1" repeat="2" increment="1" minshow="1"/>
        </property>

        <property name="TEL">
          <value field="TEL_HOME"/>
          <parameter name="TYPE" default="yes" positional="yes" show="yes">
            <value>
              <enum name="CELL"/>
              <enum name="HOME"/>
              <enum name="WORK"/>
              <enum name="FAX"/>
              <enum name="MODEM"/>
              <enum name="VOICE"/>
            </value>
            <position has="HOME" hasnot="FAX,CELL" shows="VOICE" field="TEL_HOME" overwriteempty="yes"/>
            <position has="WORK" hasnot="FAX,CELL" shows="VOICE" field="TEL_WORK" overwriteempty="yes"/>
            <position has="CELL" shows="VOICE" field="TEL_MOBILE" overwriteempty="yes"/>
            <position has="FAX" field="TEL_FAX" overwriteempty="yes"/>
            <position field="TEL_OTHER_1" repeat="4" increment="1" minshow="0" overwriteempty="yes"/>
          </parameter>
        </property>

        <property name="ADR" values="7">
          <value index="0" field="ADR_H_POBOX"/>
          <value index="1" field="ADR_H_ADDTL"/>
          <value index="2" field="ADR_H_STREET"/>
          <value index="3" field="ADR_H_CITY"/>
          <value index="4" field="ADR_H_REG"/>
          <value index="5" field="ADR_H_ZIP"/>
          <value index="6" field="ADR_H_COUNTRY"/>
          <parameter name="TYPE" default="yes" positional="yes" show="yes">
            <value>
              <enum name="HOME"/>
              <enum name="WORK"/>
            </value>
            <position has="WORK" field="ADR_W_POBOX"/>
            <position has="HOME" field="ADR_H_POBOX"/>
            <position field="ADR_O_POBOX"/>
          </parameter>
        </property>

        <property name="BDAY">
          <value field="BDAY"/>
        </property>

        <property name="NOTE" filter="no">
          <value field="NOTE"/>
        </property>

        <property name="PHOTO" filter="no">
          <value field="PHOTO" conversion="BLOB_B64"/>
          <parameter name="TYPE" default="no" show="no"> <!-- note: do not show the param, because e.g. Nokia E-Series would not send PHOTO then -->
            <value field="PHOTO_TYPE"/>
          </parameter>
        </property>

      </profile>
    </mimeprofile>

    <!-- vCard 2.1 datatype, using vCard profile defined above -->
    <datatype name="vcard21" basetype="vcard">
      <version>2.1</version>
      <use mimeprofile="vcard"/>
    </datatype>

    <!-- vCard 3.0 datatype, using vCard profile defined above -->
    <datatype name="vcard30" basetype="vcard">
      <version>3.0</version>
      <use mimeprofile="vcard"/>
    </datatype>


    <!-- list of internal fields representing vCalendar data
         (for both events (vEVENT) and tasks (vTODO)) -->
    <fieldlist name="calendar">
      <field name="SYNCLVL" type="integer" compare="never"/>

      <!-- this field defines if the data item is an EVENT or a TODO (task) -->
      <field name="KIND" type="string" compare="always"/>

      <field name="TIMEZONE" type="integer" compare="never"/>

      <field name="DMODIFIED" type="timestamp" compare="never" age="yes"/>
      <field name="DCREATED" type="timestamp" compare="never"/>

      <field name="CATEGORIES" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="CLASS" type="string" compare="conflict" merge="fillempty"/>

      <field name="SUMMARY" type="multiline" compare="always"/>
      <field name="DESCRIPTION" type="multiline" compare="slowsync" merge="lines"/>

      <field name="ATTENDEE_1" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ATTENDEE_2" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ATTENDEE_3" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ATTENDEE_4" type="multiline" compare="conflict" merge="fillempty"/>
      <field name="ATTENDEE_5" type="multiline" compare="conflict" merge="fillempty"/>

      <field name="LOCATION" type="multiline" compare="conflict" merge="fillempty"/>

      <!-- alarm -->
      <field name="ALARM_TIME" type="timestamp" compare="conflict"/>
      <field name="ALARM_SNOOZE" type="string" compare="conflict"/>
      <field name="ALARM_REPEAT" type="string" compare="conflict"/>
      <field name="ALARM_MSG" type="string" compare="conflict"/>

      <!-- recurrence rule block, fields must be in that order, including
           DTSTART as last field !! -->
      <field name="RR_FREQ" type="string" compare="conflict"/>
      <field name="RR_INTERVAL" type="integer" compare="conflict"/>
      <field name="RR_FMASK" type="integer" compare="conflict"/>
      <field name="RR_LMASK" type="integer" compare="conflict"/>
      <field name="RR_END" type="timestamp" compare="conflict"/>

      <!-- Note: DTSTART/DTEND are compared in the <comparescript>,
                 therefore compare is set no "never" here -->
      <field name="DTSTART" type="timestamp" compare="never"/> <!-- also used as DUE in vTODO -->

      <field name="DTEND" type="timestamp" compare="never"/>

      <!-- exception dates to the recurrence rule -->
      <field name="EXDATE_1" type="timestamp" compare="conflict"/>
      <field name="EXDATE_2" type="timestamp" compare="conflict"/>
      <field name="EXDATE_3" type="timestamp" compare="conflict"/>
      <field name="EXDATE_4" type="timestamp" compare="conflict"/>
      <field name="EXDATE_5" type="timestamp" compare="conflict"/>

      <!-- for tasks only -->
      <field name="PRIORITY" type="integer" compare="conflict"/>
      <field name="STATUS" type="string" compare="conflict" merge="fillempty"/>

    </fieldlist>

    <!-- vCalendar profile, including subprofiles for
         both events (vEVENT) and tasks (vTODO) -->
    <mimeprofile name="vcalendar" fieldlist="calendar">

      <profile name="VCALENDAR" nummandatory="1">

        <property name="VERSION" mandatory="yes">
          <value conversion="version"/>
        </property>

        <property name="TZ">
          <value field="TIMEZONE" conversion="TZ"/>
        </property>

        <!-- sub-profile for events -->
        <subprofile name="VEVENT" nummandatory="1" field="KIND" value="EVENT" showifselectedonly="true">

          <property name="LAST-MODIFIED">
            <value field="DMODIFIED"/>
          </property>

          <property name="DCREATED" suppressempty="yes">
            <value field="DCREATED"/>
          </property>

          <!-- vCalendar 1.0 needs ";" as separator between categories -->
          <property name="CATEGORIES" values="list" valueseparator=";" altvalueseparator="," suppressempty="yes">
            <value field="CATEGORIES" combine=","/>
          </property>

          <property name="CLASS" suppressempty="yes">
            <value field="CLASS"/>
          </property>

          <property name="SUMMARY" mandatory="yes">
            <value field="SUMMARY"/>
          </property>

          <property name="DESCRIPTION" mandatory="yes">
            <value field="DESCRIPTION"/>
          </property>

          <property name="LOCATION" suppressempty="yes">
            <value field="LOCATION"/>
          </property>

          <property name="DTSTART" suppressempty="yes">
            <value field="DTSTART"/>
          </property>

          <property name="DTEND" suppressempty="yes">
            <value field="DTEND"/>
          </property>

          <property name="ATTENDEE" suppressempty="yes">
            <value field="ATTENDEE_1"/>
            <position field="ATTENDEE_1" repeat="5" increment="1" minshow="0"/>
          </property>

          <!-- recurrence rule (with delayed parsing, as it is dependent on DTSTART) -->
          <property name="RRULE" suppressempty="yes" delayedparsing="1">
            <!-- Note: RR_FREQ is the beginning of a block of fields
                 suitable for the "rrule" conversion mode -->
            <value field="RR_FREQ" conversion="rrule"/>
          </property>

          <!-- up to five exceptions for recurrence rule -->
          <property name="EXDATE" values="list" suppressempty="yes">
            <value field="EXDATE_1"/>
            <position field="EXDATE_1" repeat="5" increment="1" minshow="0"/>
          </property>

          <!-- AALARM and DALARM both use the same fields -->
          <property name="AALARM" values="4" suppressempty="yes">
            <value index="0" field="ALARM_TIME" conversion="emptyonly"/>
            <value index="1" field="ALARM_SNOOZE" conversion="emptyonly"/>
            <value index="2" field="ALARM_REPEAT" conversion="emptyonly"/>
            <value index="3" field="ALARM_MSG" conversion="emptyonly"/>
          </property>
          <property name="DALARM" values="4" suppressempty="yes">
            <value index="0" field="ALARM_TIME" conversion="emptyonly"/>
            <value index="1" field="ALARM_SNOOZE" conversion="emptyonly"/>
            <value index="2" field="ALARM_REPEAT" conversion="emptyonly"/>
            <value index="3" field="ALARM_MSG" conversion="emptyonly"/>
          </property>

        </subprofile>

        <!-- sub-profile for tasks (todo's) -->
        <subprofile name="VTODO" nummandatory="1" field="KIND" value="TODO" showifselectedonly="true">

          <property name="LAST-MODIFIED">
            <value field="DMODIFIED"/>
          </property>

          <property name="DCREATED" suppressempty="yes">
            <value field="DCREATED"/>
          </property>

          <!-- vCalendar 1.0 needs ";" as separator between categories -->
          <property name="CATEGORIES" values="list" valueseparator=";" altvalueseparator="," suppressempty="yes">
            <value field="CATEGORIES" combine=","/>
          </property>

          <property name="CLASS" suppressempty="yes">
            <value field="CLASS"/>
          </property>

          <property name="SUMMARY" mandatory="yes">
            <value field="SUMMARY"/>
          </property>

          <property name="DESCRIPTION" mandatory="yes">
            <value field="DESCRIPTION"/>
          </property>

          <property name="LOCATION" suppressempty="yes">
            <value field="LOCATION"/>
          </property>


          <property name="DUE" suppressempty="yes">
            <value field="DTSTART"/> <!-- we use DTSTART field for DUE property in tasks -->
          </property>

          <property name="ATTENDEE" suppressempty="yes">
            <value field="ATTENDEE_1"/>
            <position field="ATTENDEE_1" repeat="5" increment="1" minshow="0"/>
          </property>

          <property name="PRIORITY" suppressempty="yes">
            <value field="PRIORITY"/>
          </property>

          <property name="STATUS" suppressempty="yes">
            <value field="STATUS" conversion="emptyonly"/>
          </property>

          <!-- AALARM and DALARM both use the same fields -->
          <property name="AALARM" values="4" suppressempty="yes">
            <value index="0" field="ALARM_TIME" conversion="emptyonly"/>
            <value index="1" field="ALARM_SNOOZE" conversion="emptyonly"/>
            <value index="2" field="ALARM_REPEAT" conversion="emptyonly"/>
            <value index="3" field="ALARM_MSG" conversion="emptyonly"/>
          </property>
          <property name="DALARM" values="4" suppressempty="yes">
            <value index="0" field="ALARM_TIME" conversion="emptyonly"/>
            <value index="1" field="ALARM_SNOOZE" conversion="emptyonly"/>
            <value index="2" field="ALARM_REPEAT" conversion="emptyonly"/>
            <value index="3" field="ALARM_MSG" conversion="emptyonly"/>
          </property>

        </subprofile>

      </profile>
    </mimeprofile>


    <!-- vCalendar 1.0 datatype, using vCalendar profile defined
         above -->
    <datatype name="vcalendar10" basetype="vcalendar">
      <version>1.0</version>
      <use mimeprofile="vcalendar"/>

      <!-- Scripting allows sophisticated data adjustment:
           make sure we have always have a SUMMARY, but avoid
           SUMMARY and DESCRIPTION being identical,
           as well as always having a DTSTART
           and an alarm message -->
      <incomingscript><![CDATA[
        // make sure we have all trailing and leading spaces eliminated
        DESCRIPTION=NORMALIZED(DESCRIPTION);
        SUMMARY=NORMALIZED(SUMMARY);
        // make sure we have at least a summary
        if (SUMMARY==EMPTY) SUMMARY=DESCRIPTION; // use description if we don't have a summary
        if (SUMMARY==EMPTY) SUMMARY="unnamed"; // set dummy summary if we still don't have one
        if (DESCRIPTION==SUMMARY) DESCRIPTION=EMPTY; // do not save twice
        // make sure we have DTSTART
        if (DTSTART==EMPTY) DTSTART=DTEND;
      ]]></incomingscript>

      <outgoingscript><![CDATA[
        // make sure we have all trailing and leading spaces eliminated
        DESCRIPTION=NORMALIZED(DESCRIPTION);
        SUMMARY=NORMALIZED(SUMMARY);
        // make sure we have both description AND summary
        if (DESCRIPTION==EMPTY) DESCRIPTION=SUMMARY; // use summary text to send
        if (SUMMARY==EMPTY) SUMMARY="unnamed";
        if (DESCRIPTION==EMPTY) DESCRIPTION=SUMMARY; // use summary text to send
        // make sure we have an alarm message
        if (ALARM_TIME!=EMPTY && ALARM_MSG==EMPTY) ALARM_MSG="alarm";
        // make sure we have DTSTART
        if (DTSTART==EMPTY) DTSTART=DTEND;
      ]]></outgoingscript>

      <!-- filterinitscript TODO DBHANDLESOPTS not supported><![CDATA[
        // check if we need to filter
        INTEGER NEEDFILTER;

        // we need to filter if STARTDATE() and/or ENDDATE() are set...
        NEEDFILTER =
          !DBHANDLESOPTS() && // ...but only if DB itself does not handle it directly
          (STARTDATE()!=EMPTY || ENDDATE()!=EMPTY); // start or end date set
        SETFILTERALL(NEEDFILTER); // as the filter conditions change dynamically with time, we need to filter ALL records
        RETURN NEEDFILTER; // we need to filter
      ]]></filterinitscript -->

      <!-- filterscript TODO ENDDATE not supported><![CDATA[
        INTEGER PASSES;

        // check if item passes filter
        PASSES=FALSE;
        // as vCalendar handles events and tasks, we need to differentiate here
        IF (KIND=="EVENT") {
          // Events pass if they start within the range or
          // have a recurrence that has started, but not yet ended
          PASSES =
            (DTSTART<=ENDDATE()) &&
            (
              (DTSTART>=STARTDATE()) ||
              ((RR_FREQ!=EMPTY) && ((RR_END==EMPTY) || (RR_END>STARTDATE())))
            );
        }
        ELSE {
          // Todo pass if they have no DUE or one within the range
          PASSES =
            (DTSTART==EMPTY) ||
            (DTSTART>=STARTDATE() && DTSTART<=ENDDATE());
        }
        RETURN PASSES;
      ]]></filterscript -->

      <!-- TODO comparescript><![CDATA[
        INTEGER RES;

        // do standard compare (WHICH MUST NOT INCLUDE DTSTART/DTEND!)
        RES = COMPAREFIELDS();
        // do specially relaxed date checking
        if (RES==0) {
          // only check for same local date (not time) of DTSTART(=DUE for vTODO)
          // to increase probability that time zone problems get masked out
          RES = COMPARE(DATEONLY(TARGET.DTSTART),DATEONLY(REFERENCE.DTSTART));
        }
        RETURN RES;
      ]]></comparescript -->
    </datatype>



    <!-- list of internal fields representing plain text note data -->
    <fieldlist name="Note">
      <field name="SYNCLVL" type="integer" compare="never"/>
      <field name="SUBJECT" type="multiline" compare="always"/>
      <field name="TEXT" type="multiline" compare="conflict" merge="lines"/>
    </fieldlist>

    <textprofile name="Note" fieldlist="Note">
      <linemap field="SUBJECT">
        <numlines>1</numlines>
        <inheader>false</inheader>
        <allowempty>true</allowempty>
        <filterkeyword>SUBJECT</filterkeyword>
      </linemap>
      <linemap field="TEXT">
        <numlines>0</numlines>
        <inheader>false</inheader>
        <allowempty>true</allowempty>
      </linemap>
    </textprofile>

    <datatype name="note" basetype="text">
      <use profile="Note"/>
      <typestring>text/plain</typestring>
      <versionstring>1.0</versionstring>
    </datatype>

    <datatype name="note11" basetype="text">
      <use profile="Note"/>
      <typestring>text/plain</typestring>
      <versionstring>1.1</versionstring>
    </datatype>


    <!-- list of internal fields representing vBookmark data -->
    <fieldlist name="bookmarks">
      <field name="REV" type="timestamp" compare="never" age="yes"/>
      <field name="SYNCLVL" type="integer" compare="never"/>

      <!-- Name -->
      <field name="TITLE" type="string" compare="always"/>

      <!-- categories and classification -->
      <field name="CATEGORIES" type="string" compare="conflict" merge="fillempty"/>
      <field name="CLASS" type="string" compare="conflict" merge="fillempty"/>

      <!-- web addresses -->
      <field name="URL" type="url" compare="slowsync" merge="fillempty"/>

      <!-- Note -->
      <field name="NOTE" type="multiline" compare="conflict" merge="lines"/>

    </fieldlist>

    <!-- vBookmark profile -->
    <mimeprofile name="vbookmark" fieldlist="bookmarks">

      <profile name="VBKM" nummandatory="0">
        <property name="VERSION">
          <value conversion="version"/>
        </property>

        <property name="X-LAST-MODIFIED">
          <value field="REV"/>
        </property>

        <property name="TITLE">
          <value field="TITLE"/>
        </property>

        <property name="URL">
          <value field="URL"/>
        </property>

        <!-- non-standard properties -->

        <!-- inherit CATEGORIES from vCard 3.0, i.e. comma separated -->
        <property name="CATEGORIES" values="list" valueseparator="," altvalueseparator=";">
          <value field="CATEGORIES" combine=","/>
        </property>

        <property name="CLASS" suppressempty="yes">
          <value field="CLASS"/>
        </property>

        <property name="NOTE" filter="no">
          <value field="NOTE"/>
        </property>

      </profile>
    </mimeprofile>

    <!-- vBookmark datatype, using vBookmark profile defined above -->
    <datatype name="vbookmark" basetype="mimedir">
      <typestring>text/x-vbookmark</typestring>
      <versionstring>1.0</versionstring>
      <use profile="vbookmark"/>
    </datatype>

  </datatypes>


  <client type="plugin">
    <plugin_module>SDK_textdb</plugin_module>

    <!-- TODO: configure this in SyncEvolution -->
    <binfilespath>/home/pohly/.syncevolution</binfilespath>
    <defaultauth>none</defaultauth>

    <datastore name="addressbook" type="plugin">

      

      <plugin_module>SDK_textdb</plugin_module>
      <plugin_datastoreadmin>yes</plugin_datastoreadmin>
      <plugin_params>
        <!-- specify plugin-specific parameters here, they will be
             passed to the plugin implementation for processing -->
        <ultimate_answer>42</ultimate_answer> <!-- just as an example -->
         <datafilepath>/home/pohly/funambol/addressbook</datafilepath>
      </plugin_params>


      <!-- General datastore settings for all DB types -->

      <!-- if this is set to "yes", SyncML clients can only read
           from the server database, but make no modifications -->
      <readonly>no</readonly>

      <!-- conflict strategy: Newer item wins
           You can set "server-wins" or "client-wins" as well
           if you want to give one side precedence
      -->
      <conflictstrategy>newer-wins</conflictstrategy>

      <!-- on slowsync: duplicate items that are not fully equal
           You can set this to "newer-wins" as well to avoid
           duplicates as much as possible
      -->
      <slowsyncstrategy>duplicate</slowsyncstrategy>

      <!-- Visibility control: Server items that have the SYNCLVL
           field set to 0 will be invisible to SyncML clients.
           Using CGI-filtering in database names (such as
           ./contacts?SYNCLVL:>=5) smaller clients can
           sync a reduced set of server items -->
      <makepassfilter>F.SYNCLVL:=10</makepassfilter>
      <invisiblefilter>F.SYNCLVL:=0|F.SYNCLVL*=E</invisiblefilter>
      <makevisiblefilter>F.SYNCLVL:=10</makevisiblefilter>


      <!-- text db plugin is designed for UTF-8, make sure data is passed as UTF-8 (and not the ISO-8859-1 default) -->
      <datacharset>UTF-8</datacharset>
      <!-- use C-language (unix style) linefeeds (\n, 0x0A) -->
      <datalineends>unix</datalineends>

      <!-- set this to "UTC" if time values should be stored in UTC into the database
           rather than local time. "SYSTEM" denotes local server time zone. -->
      <datatimezone>SYSTEM</datatimezone>

      <!-- plugin DB may have its own identifiers to determine the point in time of changes, so
           we must make sure this identifier is stored (and not only the sync time) -->
      <storesyncidentifiers>yes</storesyncidentifiers>

      <!-- Mapping of the fields to the fieldlist "contacts" -->
      <fieldmap fieldlist="contacts">
        <initscript><![CDATA[
           DEBUGSHOWVARS();
           string foo;
           DEBUGSHOWVARS();
           DEBUGMESSAGE("hello world");
           DEBUGSHOWVARS();
        ]]></initscript>
        <beforewritescript><![CDATA[
           DEBUGSHOWVARS();
           foo = MAKETEXTWITHPROFILE("vcard", 2);
           DEBUGSHOWVARS();
        ]]></beforewritescript>
        <afterreadscript><![CDATA[
           DEBUGSHOWVARS();
           PARSETEXTWITHPROFILE(foo, "vcard", 2);
           DEBUGSHOWVARS();
        ]]></afterreadscript>
        <map name="0" references="N_LAST" type="string"/>
        <map name="1" references="foo" type="string"/>
      </fieldmap>

      <!-- datatypes supported by this datastore -->
      <typesupport>
        <use datatype="vcard21" mode="rw" preferred="yes"/>
        <use datatype="vcard30" mode="rw"/>
      </typesupport>

    </datastore>

    <datastore name="notes" type="plugin">

      <plugin_module>SDK_textdb</plugin_module>
      <plugin_datastoreadmin>yes</plugin_datastoreadmin>
      <plugin_params>
        <!-- specify plugin-specific parameters here, they will be
             passed to the plugin implementation for processing -->
        <ultimate_answer>42</ultimate_answer> <!-- just as an example -->
      </plugin_params>


      <!-- General datastore settings for all DB types -->

      <!-- if this is set to "yes", SyncML clients can only read
           from the server database, but make no modifications -->
      <readonly>no</readonly>

      <!-- conflict strategy: Newer item wins
           You can set "server-wins" or "client-wins" as well
           if you want to give one side precedence
      -->
      <conflictstrategy>newer-wins</conflictstrategy>

      <!-- on slowsync: duplicate items that are not fully equal
           You can set this to "newer-wins" as well to avoid
           duplicates as much as possible
      -->
      <slowsyncstrategy>duplicate</slowsyncstrategy>

      <!-- Visibility control: Server items that have the SYNCLVL
           field set to 0 will be invisible to SyncML clients.
           Using CGI-filtering in database names (such as
           ./contacts?SYNCLVL:>=5) smaller clients can
           sync a reduced set of server items -->
      <makepassfilter>F.SYNCLVL:=10</makepassfilter>
      <invisiblefilter>F.SYNCLVL:=0|F.SYNCLVL*=E</invisiblefilter>
      <makevisiblefilter>F.SYNCLVL:=10</makevisiblefilter>


      <!-- text db plugin is designed for UTF-8, make sure data is passed as UTF-8 (and not the ISO-8859-1 default) -->
      <datacharset>UTF-8</datacharset>
      <!-- use C-language (unix style) linefeeds (\n, 0x0A) -->
      <datalineends>unix</datalineends>

      <!-- set this to "UTC" if time values should be stored in UTC into the database
           rather than local time. "SYSTEM" denotes local server time zone. -->
      <datatimezone>SYSTEM</datatimezone>

      <!-- plugin DB may have its own identifiers to determine the point in time of changes, so
           we must make sure this identifier is stored (and not only the sync time) -->
      <storesyncidentifiers>yes</storesyncidentifiers>

      <!-- Mapping of the fields to the fieldlist "notes" -->
      <fieldmap fieldlist="Note">
        <automap indexasname="true"/>
      </fieldmap>

      <typesupport>
        <use datatype="note" mode="rw" preferred="yes"/>
        <use datatype="note11" mode="rw"/>
      </typesupport>

    </datastore>

    <datastore name="bookmarks" type="plugin">

      <plugin_module>SDK_textdb</plugin_module>
      <plugin_datastoreadmin>yes</plugin_datastoreadmin>
      <plugin_params>
        <!-- specify plugin-specific parameters here, they will be
             passed to the plugin implementation for processing -->
        <ultimate_answer>42</ultimate_answer> <!-- just as an example -->
      </plugin_params>


      <!-- General datastore settings for all DB types -->

      <!-- if this is set to "yes", SyncML clients can only read
           from the server database, but make no modifications -->
      <readonly>no</readonly>

      <!-- conflict strategy: Newer item wins
           You can set "server-wins" or "client-wins" as well
           if you want to give one side precedence
      -->
      <conflictstrategy>newer-wins</conflictstrategy>

      <!-- on slowsync: duplicate items that are not fully equal
           You can set this to "newer-wins" as well to avoid
           duplicates as much as possible
      -->
      <slowsyncstrategy>duplicate</slowsyncstrategy>

      <!-- Visibility control: Server items that have the SYNCLVL
           field set to 0 will be invisible to SyncML clients.
           Using CGI-filtering in database names (such as
           ./contacts?SYNCLVL:>=5) smaller clients can
           sync a reduced set of server items -->
      <makepassfilter>F.SYNCLVL:=10</makepassfilter>
      <invisiblefilter>F.SYNCLVL:=0|F.SYNCLVL*=E</invisiblefilter>
      <makevisiblefilter>F.SYNCLVL:=10</makevisiblefilter>


      <!-- text db plugin is designed for UTF-8, make sure data is passed as UTF-8 (and not the ISO-8859-1 default) -->
      <datacharset>UTF-8</datacharset>
      <!-- use C-language (unix style) linefeeds (\n, 0x0A) -->
      <datalineends>unix</datalineends>

      <!-- set this to "UTC" if time values should be stored in UTC into the database
           rather than local time. "SYSTEM" denotes local server time zone. -->
      <datatimezone>SYSTEM</datatimezone>

      <!-- plugin DB may have its own identifiers to determine the point in time of changes, so
           we must make sure this identifier is stored (and not only the sync time) -->
      <storesyncidentifiers>yes</storesyncidentifiers>

      <!-- Mapping of the fields to the fieldlist "bookmarks" -->
      <fieldmap fieldlist="bookmarks">
        <automap indexasname="true"/>
      </fieldmap>

      <!-- datatypes supported by this datastore -->
      <typesupport>
        <use datatype="vbookmark" mode="rw" preferred="yes"/>
      </typesupport>

    </datastore>

  </client>

</sysync_config>
